@page
@using DropboxSignEmbeddedSigning.DropboxSign
@inject DropboxSignConfiguration DropboxSignConfiguration
@model DropboxSignEmbeddedSigning.Pages.LeaseAgreements.Sign

@{
    Layout = "Shared/_Layout";
    ViewData["Title"] = "Sign Lease Agreement";
}

<h2 class="is-size-2">@ViewData["Title"]</h2>
<hr/>
<div class="notification is-success is-hidden" id="success-message">
    <p>Successfully signed the lease agreement.</p>
</div>

@section Scripts
{
    <script src="https://cdn.hellosign.com/public/js/embedded/v2.11.1/embedded.production.min.js"></script>
    <script>
        const clientId = '@Html.Raw(DropboxSignConfiguration.ClientId)';
        const signUrl = '@Html.Raw(Model.SignUrl)';
        
        const client = new HelloSign();
        client.on('finish', () => document.querySelector("#success-message").classList.remove("is-hidden"));
        client.on('error', () => window.location.href = "/LeaseAgreements?errorMessage=Error occurred while signing.");
        client.on('cancel', () => window.location.href = "/LeaseAgreements");
        
        function signDocument() {    
            client.open(signUrl, {
                clientId: clientId,
                skipDomainVerification: true,
                testMode: true,
            });
        }
        
        // Call the signDocument function when the page loads
        document.addEventListener('DOMContentLoaded', signDocument);
    </script>
}